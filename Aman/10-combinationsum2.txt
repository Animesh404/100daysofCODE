class Solution {
public:
    void combinations(vector<int>candidates,int target,vector<vector<int>>&ans,vector<int>v,int ind){
        
        if(target==0){
                ans.push_back(v);
                return;
        }
        for(int i=ind;i<candidates.size();i++){
            if(candidates[i]>target){
                break;
            }
            if(ind<i && candidates[i]==candidates[i-1]){
                continue;
            }
            v.push_back(candidates[i]);
            combinations(candidates,target-candidates[i],ans,v,i+1);
            v.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
         vector<vector<int>>ans;
        vector<int>v;
        sort(candidates.begin(),candidates.end());
        combinations(candidates,target,ans,v,0);
        return ans;
    }
};