class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        // 1
        // unordered_map<int,int>m;
        // int ans;
        // for(int i=0;i<nums.size();i++){
        //     m[nums[i]]++;
        // }
        // for(auto it:m){
        //     if(it.second==1){
        //         ans=it.first;
        //     }
        // }
        // return ans;
        
        // 2
        // int ans=0;
        // for(int i=0;i<nums.size();i++){
        //     ans=ans^nums[i];
        // }
        // return ans;
        
        //3
        int low=0;
        int high=nums.size()-2;
        while(low<=high){
            int mid=(low+high)/2;
            if(mid%2==0){
                if(nums[mid]!=nums[mid+1]){
                    high=mid-1;
                }
                else{
                    low=mid+1;
                }
            }
            else{
                if(nums[mid]==nums[mid+1]){
                    high=mid-1;
                }
                else{
                    low=mid+1;
                }
            }
        }
        return nums[low];
    }
};